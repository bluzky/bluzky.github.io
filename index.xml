<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The 54 tribes</title>
    <link>http://bluzky.github.io/</link>
    <description>Recent content on The 54 tribes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>bluesky.1289@gmail.com (Dũng Nguyễn)</managingEditor>
    <webMaster>bluesky.1289@gmail.com (Dũng Nguyễn)</webMaster>
    <lastBuildDate>Sun, 21 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://bluzky.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dùng MAP, FILTER và REDUCE để xử lý danh sách / list trong Python</title>
      <link>http://bluzky.github.io/post/2018-01-21-python-xu-ly-mang-voi-filter-reduce/</link>
      <pubDate>Sun, 21 Jan 2018 00:00:00 +0000</pubDate>
      <author>bluesky.1289@gmail.com (Dũng Nguyễn)</author>
      <guid>http://bluzky.github.io/post/2018-01-21-python-xu-ly-mang-voi-filter-reduce/</guid>
      <description>1. Giới thiệu  List là một trong những kiểu dữ liệu được sử dụng rất nhiều trong python. Các thao tác thường được thực hiện trên list: xử lý từng phần tử trong list, lọc lấy một số phần tử thỏa điều kiện, tính toán dựa trên tất cả các phần tử của list( vd tính tổng) và trả về kết quả. Để đơn giản việc xử lý List, Python hỗ trợ một số hàm có sẵn để thực hiện các tác vụ trên gồm map(), filter(), reduce()  2.</description>
    </item>
    
    <item>
      <title>Python decorator là gì? dùng khi nào</title>
      <link>http://bluzky.github.io/post/2018-01-21-python-decorator/</link>
      <pubDate>Sun, 21 Jan 2018 00:00:00 +0000</pubDate>
      <author>bluesky.1289@gmail.com (Dũng Nguyễn)</author>
      <guid>http://bluzky.github.io/post/2018-01-21-python-decorator/</guid>
      <description>1. Decorator là gì?  Decorator là một mẫu thiết kế (Design pattern) thường được dùng để thay đổi hành vi, chức năng của hàm(function) hoặc lớp (class) mà không cần phải thay đổi code của hàm hoặc lớp. Tham khảo Python hỗ trợ cú pháp (syntax) cho Decorator từ version 2.4 Về cơ bản Decorator giống như một lớp vỏ bọc (wrapper), nó thay đổi hành vi(behavior) của code trước và sau khi gọi hàm chính (hàm được decorate).</description>
    </item>
    
    <item>
      <title>Truyền tham số động trong python (*args | **kwargs)?</title>
      <link>http://bluzky.github.io/post/2018-01-21-truyen-tham-so-dong-python/</link>
      <pubDate>Sun, 21 Jan 2018 00:00:00 +0000</pubDate>
      <author>bluesky.1289@gmail.com (Dũng Nguyễn)</author>
      <guid>http://bluzky.github.io/post/2018-01-21-truyen-tham-so-dong-python/</guid>
      <description>Thực sự thì không nhất thiết phải là *args và **kwargs. điều quan trọng là tham số có 1 dấu sao * hay là 2 dấu sao **. Đặt tên tham số là *var hay **vars hay bất cứ thứ gì bạn muốn. Nhưng để dễ hiểu thì nên dùng tên chuẩn là *args và **kwargs
1. *args và **kwargs dùng để làm gì?  Khi khai báo 1 hàm, sử dụng *args và **kwargs cho phép bạn truyền vào bao nhiêu tham số cũng được mà không cần biết trước số lượng.</description>
    </item>
    
    <item>
      <title>Tìm hiểu về Oauth / Oauth hoạt động như thế nào?</title>
      <link>http://bluzky.github.io/post/2018-01-21-tim-hieu-oauth/</link>
      <pubDate>Sun, 21 Jan 2018 00:00:00 +0000</pubDate>
      <author>bluesky.1289@gmail.com (Dũng Nguyễn)</author>
      <guid>http://bluzky.github.io/post/2018-01-21-tim-hieu-oauth/</guid>
      <description>1. Oauthh 2 và các khái niệm 1.1 Oauth 2 là gì: Oauth 2 là bản nâng cấp của giao thức chứng thực Oauth 1.0
1.2 Các Role (vai trò) trong mô hình oauth  resource owner là đối tượng có khả năng cấp quyền truy cập tới tài nguyên (resource) được bảo vệ Resource server là một server lưu trữ các tài nguyên, có khả năng xử lý các yêu cầu truy cập tới tài nguyên được bảo vệ.</description>
    </item>
    
    <item>
      <title>What is Rabbit MQ?</title>
      <link>http://bluzky.github.io/post/2018-01-21-what-is-rabbit-mq/</link>
      <pubDate>Sun, 21 Jan 2018 00:00:00 +0000</pubDate>
      <author>bluesky.1289@gmail.com (Dũng Nguyễn)</author>
      <guid>http://bluzky.github.io/post/2018-01-21-what-is-rabbit-mq/</guid>
      <description>1. What is Rabbit MQ?  Rabbit MQ is an server application, it is a message broker which implement AMQP (Advanced Message Queue Protocol). It works like a post service, which take the message from sender and dispatch that message to the receiver.
 Some terminologies:
 Producer: send message to queue Queue: hold all message added by producer and dispatch those message to a consumer Consumer: receive message from  2.</description>
    </item>
    
    <item>
      <title>About me</title>
      <link>http://bluzky.github.io/page/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>bluesky.1289@gmail.com (Dũng Nguyễn)</author>
      <guid>http://bluzky.github.io/page/about/</guid>
      <description>My name is Inigo Montoya. I have the following qualities:
 I rock a great mustache I&amp;rsquo;m extremely loyal to my family  What else do you need?
my history To be honest, I&amp;rsquo;m having some trouble remembering right now, so why don&amp;rsquo;t you just watch my movie and it will answer all your questions.</description>
    </item>
    
  </channel>
</rss>