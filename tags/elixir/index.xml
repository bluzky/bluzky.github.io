<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>elixir on The 54 tribes</title>
    <link>http://bluzky.github.io/tags/elixir/</link>
    <description>Recent content in elixir on The 54 tribes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 18 May 2018 01:05:50 +0700</lastBuildDate>
    
	<atom:link href="http://bluzky.github.io/tags/elixir/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sử dụng ETS để tăng tốc ứng dụng với Phoenix</title>
      <link>http://bluzky.github.io/2018/05/s%E1%BB%AD-d%E1%BB%A5ng-ets-%C4%91%E1%BB%83-t%C4%83ng-t%E1%BB%91c-%E1%BB%A9ng-d%E1%BB%A5ng-v%E1%BB%9Bi-phoenix/</link>
      <pubDate>Fri, 18 May 2018 01:05:50 +0700</pubDate>
      
      <guid>http://bluzky.github.io/2018/05/s%E1%BB%AD-d%E1%BB%A5ng-ets-%C4%91%E1%BB%83-t%C4%83ng-t%E1%BB%91c-%E1%BB%A9ng-d%E1%BB%A5ng-v%E1%BB%9Bi-phoenix/</guid>
      <description>Bài viết này sẽ hướng dẫn các bạn sử dụng ETS như là bộ nhớ cache để tăng tốc các ứng dụng web Phoenix
 Dành cho các bạn chưa biết:
 ETS (Erlang Term Storage) là cơ sở dữ liệu dạng key-value lưu trữ trên RAM, tương tự như Memcache và Redis, với ưu điểm là tốc độ truy xuất cực nhanh. Đọc thêm về ETS Cache là việc lưu lại các kết quả xử lý của request vào bộ nhớ và trả về cho các request sau mà không cần phải tính toán lại -&amp;gt; giảm response time.</description>
    </item>
    
    <item>
      <title>Elixir - Lưu trữ dữ liệu trên RAM với ETS</title>
      <link>http://bluzky.github.io/2018/05/elixir-l%C6%B0u-tr%E1%BB%AF-d%E1%BB%AF-li%E1%BB%87u-tr%C3%AAn-ram-v%E1%BB%9Bi-ets/</link>
      <pubDate>Sat, 12 May 2018 14:28:22 +0700</pubDate>
      
      <guid>http://bluzky.github.io/2018/05/elixir-l%C6%B0u-tr%E1%BB%AF-d%E1%BB%AF-li%E1%BB%87u-tr%C3%AAn-ram-v%E1%BB%9Bi-ets/</guid>
      <description>ETS là gì? Có lẽ các bạn đã nghe qua về redis hoặc memcache, hoặc là cả hai. Còn nếu bạn chưa nghe tới bao giờ thì đó là những cơ sở dữ liệu lưu trữ trên RAM với ưu điểm là tốc độ truy xuất cực kỳ nhanh. ETS - Erlang Term Service - cũng là một CSDL lưu trữ trên RAM (in-ram DB) nhưng khác ở chỗ là ETS có sẵn khi cài Elixir/Erlang và bạn chẳng phải mất công cài đặt, cấu hình như 2 anh trên kia, nhà trồng được việc gì phải ngại.</description>
    </item>
    
    <item>
      <title>Chạy server Phoenix với SSL trên localhost</title>
      <link>http://bluzky.github.io/2018/05/ch%E1%BA%A1y-server-phoenix-v%E1%BB%9Bi-ssl-tr%C3%AAn-localhost/</link>
      <pubDate>Wed, 02 May 2018 22:42:14 +0700</pubDate>
      
      <guid>http://bluzky.github.io/2018/05/ch%E1%BA%A1y-server-phoenix-v%E1%BB%9Bi-ssl-tr%C3%AAn-localhost/</guid>
      <description>Từ tháng 04/2018 tất cả các app mới tạo trên Facebook chỉ chấp nhận callback url có sử dụng SSL. Đây là những bước đơn giản để có thể sử dụng giao thức https trên localhost đối với Phoenix
 1. Tạo chứng chỉ
Run command
openssl genrsa 1024 &amp;gt; app.key &amp;amp;&amp;amp; openssl req -new -x509 -nodes -sha1 -days 365 -key ~/app.key &amp;gt; ~/app.cert  2. Copy file
app.key and app.</description>
    </item>
    
    <item>
      <title>Finite state machine trong lập trình</title>
      <link>http://bluzky.github.io/2018/04/finite-state-machine-trong-l%E1%BA%ADp-tr%C3%ACnh/</link>
      <pubDate>Fri, 13 Apr 2018 22:32:22 +0700</pubDate>
      
      <guid>http://bluzky.github.io/2018/04/finite-state-machine-trong-l%E1%BA%ADp-tr%C3%ACnh/</guid>
      <description>1. Tìm hiểu về FSM  FSM(Finite state machine) - Máy trạng thái hữu hạn là một mô hình toán học biểu diễn trạng thái của hệ, trong đó số trạng thái là hữu hạn. Từ mỗi trạng thái, máy có thể chuyển đổi qua 1 số trạng thái cố định khác, dựa trên các sự kiện, input.
 Fsm được biểu diễn như 1 đồ thị có hướng.</description>
    </item>
    
  </channel>
</rss>