<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Elixir on The 54 tribes</title>
    <link>http://bluzky.github.io/tags/elixir/</link>
    <description>Recent content in Elixir on The 54 tribes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>bluesky.1289@gmail.com (Dũng Nguyễn)</managingEditor>
    <webMaster>bluesky.1289@gmail.com (Dũng Nguyễn)</webMaster>
    <lastBuildDate>Sat, 12 May 2018 14:28:22 +0700</lastBuildDate>
    
	<atom:link href="http://bluzky.github.io/tags/elixir/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Elixir - Lưu trữ dữ liệu trên RAM với ETS</title>
      <link>http://bluzky.github.io/post/2018-05-12-erlang-term-storage/</link>
      <pubDate>Sat, 12 May 2018 14:28:22 +0700</pubDate>
      <author>bluesky.1289@gmail.com (Dũng Nguyễn)</author>
      <guid>http://bluzky.github.io/post/2018-05-12-erlang-term-storage/</guid>
      <description>ETS là gì? Có lẽ các bạn đã nghe qua về redis hoặc memcache, hoặc là cả hai. Còn nếu bạn chưa nghe tới bao giờ thì đó là những cơ sở dữ liệu lưu trữ trên RAM với ưu điểm là tốc độ truy xuất cực kỳ nhanh. ETS - Erlang Term Service - cũng là một CSDL lưu trữ trên RAM (in-ram DB) nhưng khác ở chỗ là ETS có sẵn khi cài Elixir/Erlang và bạn chẳng phải mất công cài đặt, cấu hình như 2 anh trên kia, nhà trồng được việc gì phải ngại.</description>
    </item>
    
    <item>
      <title>Chạy server Phoenix với SSL trên localhost</title>
      <link>http://bluzky.github.io/post/2018-05-02-phoenix-local-ssl/</link>
      <pubDate>Wed, 02 May 2018 22:42:14 +0700</pubDate>
      <author>bluesky.1289@gmail.com (Dũng Nguyễn)</author>
      <guid>http://bluzky.github.io/post/2018-05-02-phoenix-local-ssl/</guid>
      <description>Từ tháng 04/2018 tất cả các app mới tạo trên Facebook chỉ chấp nhận callback url có sử dụng SSL. Đây là những bước đơn giản để có thể sử dụng giao thức https trên localhost đối với Phoenix
 1. Tạo chứng chỉ
Run command
openssl genrsa 1024 &amp;gt; app.key &amp;amp;&amp;amp; openssl req -new -x509 -nodes -sha1 -days 365 -key ~/app.key &amp;gt; ~/app.cert  2. Copy file
app.key and app.</description>
    </item>
    
    <item>
      <title>Finite state machine trong lập trình</title>
      <link>http://bluzky.github.io/post/2018-04-13-finite-state-machine-web-development/</link>
      <pubDate>Fri, 13 Apr 2018 22:32:22 +0700</pubDate>
      <author>bluesky.1289@gmail.com (Dũng Nguyễn)</author>
      <guid>http://bluzky.github.io/post/2018-04-13-finite-state-machine-web-development/</guid>
      <description>1. Tìm hiểu về FSM  FSM(Finite state machine) - Máy trạng thái hữu hạn là một mô hình toán học biểu diễn trạng thái của hệ, trong đó số trạng thái là hữu hạn. Từ mỗi trạng thái, máy có thể chuyển đổi qua 1 số trạng thái cố định khác, dựa trên các sự kiện, input.
 Fsm được biểu diễn như 1 đồ thị có hướng.</description>
    </item>
    
  </channel>
</rss>