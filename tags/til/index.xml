<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Til on The 54 tribes</title>
    <link>http://bluzky.github.io/tags/til/</link>
    <description>Recent content in Til on The 54 tribes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>bluesky.1289@gmail.com (Dũng Nguyễn)</managingEditor>
    <webMaster>bluesky.1289@gmail.com (Dũng Nguyễn)</webMaster>
    <lastBuildDate>Tue, 08 May 2018 20:56:31 +0700</lastBuildDate>
    
	<atom:link href="http://bluzky.github.io/tags/til/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Test Facebook bot trên localhost với ngrok</title>
      <link>http://bluzky.github.io/post/2018-05-08-test-fb-bot-localhost/</link>
      <pubDate>Tue, 08 May 2018 20:56:31 +0700</pubDate>
      <author>bluesky.1289@gmail.com (Dũng Nguyễn)</author>
      <guid>http://bluzky.github.io/post/2018-05-08-test-fb-bot-localhost/</guid>
      <description>Trong quá trình tìm hiểu về lập trình chat bot sử dụng các API của Facebook Messenger thì việt test chat bot trên localhost là một trở ngại.
Khi tạo một subscription cho app chat bot, Facebook sẽ gửi một request đến server mà chat bot đang chạy để xác nhận có đúng là chat bot của bạn không. Cũng như sau đó, tất cả những tin nhắn của nguời dùng sẽ đuợc gửi tới chat bot thông qua callback url.</description>
    </item>
    
    <item>
      <title>Chạy server Phoenix với SSL trên localhost</title>
      <link>http://bluzky.github.io/post/2018-05-02-phoenix-local-ssl/</link>
      <pubDate>Wed, 02 May 2018 22:42:14 +0700</pubDate>
      <author>bluesky.1289@gmail.com (Dũng Nguyễn)</author>
      <guid>http://bluzky.github.io/post/2018-05-02-phoenix-local-ssl/</guid>
      <description>Từ tháng 04/2018 tất cả các app mới tạo trên Facebook chỉ chấp nhận callback url có sử dụng SSL. Đây là những bước đơn giản để có thể sử dụng giao thức https trên localhost đối với Phoenix
 1. Tạo chứng chỉ
Run command
openssl genrsa 1024 &amp;gt; app.key &amp;amp;&amp;amp; openssl req -new -x509 -nodes -sha1 -days 365 -key ~/app.key &amp;gt; ~/app.cert  2. Copy file
app.key and app.</description>
    </item>
    
    <item>
      <title>Memcache là gì?</title>
      <link>http://bluzky.github.io/post/2018-05-01-what-is-mem-cache/</link>
      <pubDate>Tue, 01 May 2018 23:05:10 +0700</pubDate>
      <author>bluesky.1289@gmail.com (Dũng Nguyễn)</author>
      <guid>http://bluzky.github.io/post/2018-05-01-what-is-mem-cache/</guid>
      <description>1. Memcache  Memcache là một cơ sở dữ liệu dạng key-value, các dữ liệu đuợc ghi nhớ trên RAM giúp tối ưu thời gian truy xuất.
 2. Đặc điểm  Dữ liệu lưu trữ dạng key-value Value là dữ liệu dạng string Kích thuớc của Value giới hạn là 1MB Dữ liệu sẽ bị mất khi tắt máy/ tắt memcache Truy xuất dữ liệu nhanh  3. Ứng dụng Memcache thường đuợc dùng đễ cache dữ liệu trên các web server giúp giảm thời gian xử lý các request giống nhau, thay vào đó chỉ cần đọc dữ liệu từ bộ nhớ và trả về ngay lập tức.</description>
    </item>
    
    <item>
      <title>Terminal tips - Một số command hay dùng</title>
      <link>http://bluzky.github.io/post/2018-04-24-terminal-tips/</link>
      <pubDate>Tue, 24 Apr 2018 21:43:25 +0700</pubDate>
      <author>bluesky.1289@gmail.com (Dũng Nguyễn)</author>
      <guid>http://bluzky.github.io/post/2018-04-24-terminal-tips/</guid>
      <description>Khi chuyển qua dùng các hệ điều hành Unix và Mac, việc sử dụng các command line là một phần không thể thiếu, đặc biệt là các công việc liên quan tới Web dev và devops.
Tuy nhiên phần lớn là đụng tới đâu cần thì mới search, hoặc là do xài quen rồi nên cũng lười tìm cách làm khác. Chỉ cần dành 1 phút để đọc qua bài viết này, các bạn sẽ thực sự bất ngờ vì có những thứ cool đến không ngờ.</description>
    </item>
    
  </channel>
</rss>